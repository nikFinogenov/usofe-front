import React, { useEffect, useState, useContext } from 'react';
import { useSearchParams } from 'react-router-dom';
import { search } from '../services/searchService'; // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —ç—Ç–æ—Ç —Å–µ—Ä–≤–∏—Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ
import LoadingSpinner from '../components/LoadingSpinner';
import { NotifyContext } from '../context/NotifyContext';
import SearchResult from '../components/SearchResult'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç SearchResult

const Search = () => {
    const [searchParams] = useSearchParams();
    const query = searchParams.get('q'); // –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–æ–∫—É –∑–∞–ø—Ä–æ—Å–∞ –∏–∑ URL
    const [results, setResults] = useState({ users: [], categories: [], posts: [] });
    const [loading, setLoading] = useState(true);
    const showNotification = useContext(NotifyContext);

    useEffect(() => {
        const fetchSearchResults = async () => {
            try {
                setLoading(true);
                const response = await search(query); // –í—ã–∑—ã–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å –ø–æ–∏—Å–∫–∞ —Å –∑–∞–ø—Ä–æ—Å–æ–º
                console.log(response);
                setResults(response); // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
            } catch (err) {
                showNotification("Failed to search", "error");
                console.error(err);
            } finally {
                setLoading(false);
            }
        };

        if (query) {
            fetchSearchResults(); // –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–∞–ø—Ä–æ—Å–∞
        }
    }, [query, showNotification]);

    const isEmptyResults =
        !loading &&
        (!results.users.length &&
            !results.categories.length &&
            !results.posts.length);

    return (
        <div className="p-6 max-w-4xl mx-auto pt-16">
            <h1 className="text-3xl font-bold mb-4 mt-5">Search Results</h1>

            {loading && <LoadingSpinner />}

            {!loading && (
                isEmptyResults ? (
                    <p className="text-gray-500 text-xl"><i>No results found.</i>üò¢</p>
                ) : (
                    <div>
                        <SearchResult title="Users" data={results.users} linkPrefix="/user" />
                        <SearchResult title="Posts" data={results.posts} linkPrefix="/post" />
                        <SearchResult title="Categories" data={results.categories} linkPrefix="/categories" />
                    </div>
                )
            )}
        </div>
    );
};

export default Search;
